{
    "Transform": "AWS::Serverless-2016-10-31",
    "Description": "Serverless Stack",
    "Parameters": {
        "OriginUrl": {
            "Description": "The origin url to allow CORS requests from. This will be the base URL of the static website.",
            "Type": "String",
            "Default": "*"
        },
        "AppName": {
            "Type": "String",
            "Description": "Name of the application.",
            "MinLength": "1",
            "MaxLength": "80",
            "AllowedPattern": "[A-Za-z0-9-]+",
            "ConstraintDescription": "Malformed input parameter. AppName must only contain upper and lower case letters, numbers, and -.",
            "Default": "wsPortal"
        },
        "PortalEmail": {
            "Type": "String",
            "Description": "Address from which emails will be sent from to approvers.",
            "Default": "approval@roundtower.io"
        },
        "ApproverEmail": {
            "Type": "String",
            "Description": "Email address that will receive WorkSpace Creation approval requests.",
            "Default": "earl@eeg3.net"
        }
    },
    "Resources": {
        "cogDomainVerify": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Handler": "cogDomainVerify.handler",
                "Runtime": "nodejs4.3",
                "CodeUri": "./lambda/cognito-domainVerify/"
            }
        },
        "squirrel": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Handler": "sam.handler",
                "Runtime": "nodejs4.3",
                "CodeUri": "./lambda/squirrel/",
                "Environment": {
                    "Variables": {
                        "ORIGIN_URL": {
                            "Ref": "OriginUrl"
                        }
                    }
                }
            }
        },
        "workspacesControl": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Handler": "workspaces-control.handler",
                "Runtime": "nodejs4.3",
                "CodeUri": "./lambda/workspaces-control/",
                "Policies": ["AmazonWorkSpacesAdmin", "AWSStepFunctionsFullAccess"],
                "Environment": {
                    "Variables": {
                        "ORIGIN_URL": {
                            "Ref": "OriginUrl"
                        },
                        "STATE_MACHINE_ARN": {
                            "Ref": "approvalStateMachine"
                        }
                    }
                }
            }
        },
        "workspacesCreate": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Handler": "workspaces-create.handler",
                "Runtime": "nodejs4.3",
                "CodeUri": "./lambda/workspaces-create/",
                "Policies": "AmazonWorkSpacesAdmin",
                "Environment": {
                    "Variables": {
                        "ORIGIN_URL": {
                            "Ref": "OriginUrl"
                        }
                    }
                }
            }
        },
        "workspacesAppoval": {
            "Type": "AWS::Serverless::Function",
            "Properties": {
                "Handler": "workspaces-approval.handler",
                "Runtime": "nodejs4.3",
                "CodeUri": "./lambda/workspaces-approval/",
                "Timeout": 75,
                "Policies": "AdministratorAccess",
                "Environment": {
                    "Variables": {
                        "TASK_ARN": {
                            "Ref": "approvalManualActivity"
                        },
                        "API_DEPLOYMENT_ID": {
                            "Ref": "approvalApiDeployment"
                        },
                        "FROM_ADDRESS": {
                            "Ref": "PortalEmail"
                        },
                        "APPROVER_EMAIL_ADDRESS": {
                            "Ref": "ApproverEmail"
                        }
                    }
                }
            }
        },
        "approvalStepFunctionsRole": {
            "Description": "Creating service role in IAM for Step Functions",
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {
                    "Fn::Sub": "${AppName}-role"
                },
                "AssumeRolePolicyDocument": {
                    "Statement": [{
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [{
                                "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                            }]
                        },
                        "Action": "sts:AssumeRole"
                    }]
                },
                "Path": "/"
            }
        },
        "approvalManualActivity": {
            "Type": "AWS::StepFunctions::Activity",
            "Properties": {
                "Name": {
                    "Fn::Sub": "${AppName}-Step"
                }
            }
        },
        "approvalStateMachine": {
            "Type": "AWS::StepFunctions::StateMachine",
            "Properties": {
                "StateMachineName": {
                    "Fn::Sub": "${AppName}-StateMachine"
                },
                "DefinitionString": {
                    "Fn::Join": ["", ["{\"StartAt\": \"approvalManualActivity\",\"States\": {\"approvalManualActivity\": {\"Type\": \"Task\",\"Resource\": \"",
                        {
                            "Ref": "approvalManualActivity"
                        },
                        "\",\"TimeoutSeconds\": 3600,\"Next\": \"workspacesCreate\"},\"workspacesCreate\": {\"Type\": \"Task\",\"Resource\": \"",
                            {
                                "Fn::GetAtt": ["workspacesCreate", "Arn"]
                            },
                            "\",\"End\": true}}}"
                    ]]
                },
                "RoleArn": {
                    "Fn::GetAtt": ["approvalStepFunctionsRole", "Arn"]
                }

            }
        },
        "approvalResponderAPI": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Body": {
                    "swagger": "2.0",
                    "info": {
                        "version": "2017-12-20T19:01:15Z",
                        "title": "ApprovalResponderAPI"
                    },
                    "basePath": "/respond",
                    "schemes": [
                        "https"
                    ],
                    "paths": {
                        "/fail": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "parameters": [{
                                    "name": "taskToken",
                                    "in": "query",
                                    "required": false,
                                    "type": "string"
                                }],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "credentials": "arn:aws:iam::375301133253:role/APIGatewayToStepFunctions",
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": "arn:aws:apigateway:us-east-1:states:action/SendTaskFailure",
                                    "passthroughBehavior": "when_no_templates",
                                    "httpMethod": "POST",
                                    "requestTemplates": {
                                        "application/json": "{\n   \"cause\": \"Reject link was clicked.\",\n   \"error\": \"Rejected\",\n   \"taskToken\": \"$input.params('taskToken')\"\n}"
                                    },
                                    "type": "aws"
                                }
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                                            }
                                        }
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "type": "mock"
                                }
                            }
                        },
                        "/succeed": {
                            "get": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "credentials": "arn:aws:iam::375301133253:role/APIGatewayToStepFunctions",
                                    "responses": {
                                        "default": {
                                            "statusCode": "200"
                                        }
                                    },
                                    "uri": "arn:aws:apigateway:us-east-1:states:action/SendTaskSuccess",
                                    "passthroughBehavior": "when_no_templates",
                                    "httpMethod": "POST",
                                    "requestTemplates": {
                                        "application/json": "{\n   \"output\": \"\\\"$input.params('requesterEmailAddress'),$input.params('requesterUsername'),$input.params('requesterBundle')\\\"\",\n   \"taskToken\": \"$input.params('taskToken')\"\n}"
                                    },
                                    "type": "aws"
                                }
                            },
                            "options": {
                                "consumes": [
                                    "application/json"
                                ],
                                "produces": [
                                    "application/json"
                                ],
                                "responses": {
                                    "200": {
                                        "description": "200 response",
                                        "schema": {
                                            "$ref": "#/definitions/Empty"
                                        },
                                        "headers": {
                                            "Access-Control-Allow-Origin": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Methods": {
                                                "type": "string"
                                            },
                                            "Access-Control-Allow-Headers": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration": {
                                    "responses": {
                                        "default": {
                                            "statusCode": "200",
                                            "responseParameters": {
                                                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                                                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,Authorization,X-Amz-Date,X-Api-Key,X-Amz-Security-Token'",
                                                "method.response.header.Access-Control-Allow-Origin": "'*'"
                                            }
                                        }
                                    },
                                    "passthroughBehavior": "when_no_match",
                                    "requestTemplates": {
                                        "application/json": "{\"statusCode\": 200}"
                                    },
                                    "type": "mock"
                                }
                            }
                        }
                    },
                    "definitions": {
                        "Empty": {
                            "type": "object",
                            "title": "Empty Schema"
                        }
                    }
                },
                "Description": "Approval Responder API",
                "Name": "approvalResponderAPI"
            }
        },
        "approvalApiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
                "RestApiId": {
                    "Ref": "approvalResponderAPI"
                },
                "Description": "Respond Deployment",
                "StageName": "respond"
            }
        }
    }
}